# -- ENV --

source-bash --seterrprevcmd "" /etc/profile

$PATH.insert(0, '~/.local/bin')
$PATH.insert(0, '~/bin')

# -- CONFIG --

$AUTO_CD = True
$CASE_SENSITIVE_COMPLETIONS = False

xontrib load abbrevs
xontrib load fzf-widgets
xontrib load pipeliner
xontrib load prompt_starship
xontrib load sh

if p'~/.fzf.bash'.exists():
    source-bash ~/.fzf.bash

$fzf_history_binding = "c-r"
$fzf_file_binding = "c-t"
$fzf_dir_binding = "c-g"
$fzf_find_command = "fd"
$fzf_find_dirs_command = "fd -t d"

# -- LOCAL --

if p'~/.xonshrc_local'.exists():
    source '~/.xonshrc_local'

# -- ABBREVS --

abbrevs['chown'] = 'chown -R'
abbrevs['cp'] = 'cp -i -r'
abbrevs['df'] = 'df -H'
abbrevs['du'] = 'du -chs'
abbrevs['e'] = 'exit'
abbrevs['j'] = 'jobs -l'
abbrevs['mkdir'] = 'mkdir -pv'
abbrevs['mv'] = 'mv -i'
abbrevs['pgrep'] = 'pgrep -a -l'
if $(command -v rg): abbrevs['rg'] = 'rg -S'
abbrevs['scp'] = 'scp -r'
abbrevs['ssh'] = 'ssh -Y'
abbrevs['which'] = 'which -a'

# Use trash not rm.
if $(command -v trash):
    abbrevs['bin'] = 'trash'
    abbrevs['rm'] = '"Use bin instead, or /bin/rm for real rm if required."'
else:
    abbrevs['rm'] = 'rm -R'

# List directory contents.
if $(command -v exa):
    abbrevs['l'] = 'exa -l -h'
    abbrevs['ls'] = 'exa -1'
    abbrevs['lg'] = 'exa -l -h --git'
    abbrevs['ll'] = 'exa -l -h -a'
    abbrevs['lm'] = 'exa -l -h -s modified'
    abbrevs['lr'] = 'exa -l -h -R'
    abbrevs['lt'] = 'exa -l -h -T'
    abbrevs['lx'] = 'exa -l -h -s extension'
    abbrevs['lz'] = 'exa -l -h -s size'
    abbrevs['tree'] = 'exa -T'
else:
    abbrevs['ls'] = 'ls --color=tty -1'
    abbrevs['l'] = 'ls -lh'
    abbrevs['la'] = 'ls -lah'
    abbrevs['ll'] = 'ls -lAh'
    abbrevs['lx'] = 'ls -lAh -XB'
    abbrevs['lk'] = 'ls -lAh -Sr'
    abbrevs['lt'] = 'ls -lAh -tur'
    abbrevs['lc'] = 'ls -lAh -tcr'
    abbrevs['lm'] = 'ls -lAh -tr'

# Git.
if $(command -v git):
    abbrevs['ga'] = 'git add'
    abbrevs['gam'] = 'git add --update'
    abbrevs['gap'] = 'git add --patch'
    abbrevs['gb'] = 'git branch'
    abbrevs['go'] = 'git checkout'
    abbrevs['gc'] = 'git commit --verbose'
    abbrevs['gd'] = 'git diff'
    abbrevs['gds'] = 'git diff --staged'
    abbrevs['gf'] = 'git fetch --prune'
    abbrevs['gg'] = 'git log --stat --abbrev-commit'
    abbrevs['ggo'] = 'git log --oneline --graph --abbrev-commit'
    abbrevs['ggp'] = 'git log --patch --abbrev-commit'
    abbrevs['gl'] = 'git pull'
    abbrevs['gp'] = 'git push'
    abbrevs['gr'] = 'git rebase'
    abbrevs['gm'] = 'git remote --verbose'
    abbrevs['gmu'] = 'git remote add upstream'
    abbrevs['gx'] = 'git reset --soft HEAD^'
    abbrevs['gt'] = 'git stash --include-untracked'
    abbrevs['gs'] = 'git status'

# Tmux.
if $(command -v tmux):
    abbrevs['ta'] = 'tmux attach'
    abbrevs['tc'] = 'tmux choose-tree -s'
    abbrevs['td'] = 'tmux detach'
    abbrevs['tl'] = 'tmux list-sessions'
    abbrevs['tk'] = 'tmux kill-session'
    abbrevs['tn'] = 'tmux new-session'
    abbrevs['ts'] = 'tmux switch-client'

# Neovim.
if $(command -v nvim):
    abbrevs['vim'] = 'nvim'
    abbrevs['ex'] = 'nvim -e'
    abbrevs['view'] = 'nvim -R'
    abbrevs['vimdiff'] = 'nvim -d'

# Copy and paste.
if $(command -v pbcopy):
    abbrevs['copy'] = 'pbcopy'
    abbrevs['paste'] = 'pbpaste'
elif $(command -v xsel):
    abbrevs['copy'] = 'xsel --clipboard --input'
    abbrevs['paste'] = 'xsel --clipboard --output'

# Open app from command line.
if $(command -v xdg-open): abbrevs['open'] = 'xdg-open'
